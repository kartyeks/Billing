//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ARATT.Reports.ExitManagement {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ExitManagementDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ExitManagementDataSet : global::System.Data.DataSet {
        
        private ExitManagementResignationDataTable tableExitManagementResignation;
        
        private ExitManagementTerminarionDataTable tableExitManagementTerminarion;
        
        private ExitManagementTeamDataTable tableExitManagementTeam;
        
        private RelievingLetterDataTable tableRelievingLetter;
        
        private ExperienceLetterDataTable tableExperienceLetter;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ExitManagementDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ExitManagementDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ExitManagementResignation"] != null)) {
                    base.Tables.Add(new ExitManagementResignationDataTable(ds.Tables["ExitManagementResignation"]));
                }
                if ((ds.Tables["ExitManagementTerminarion"] != null)) {
                    base.Tables.Add(new ExitManagementTerminarionDataTable(ds.Tables["ExitManagementTerminarion"]));
                }
                if ((ds.Tables["ExitManagementTeam"] != null)) {
                    base.Tables.Add(new ExitManagementTeamDataTable(ds.Tables["ExitManagementTeam"]));
                }
                if ((ds.Tables["RelievingLetter"] != null)) {
                    base.Tables.Add(new RelievingLetterDataTable(ds.Tables["RelievingLetter"]));
                }
                if ((ds.Tables["ExperienceLetter"] != null)) {
                    base.Tables.Add(new ExperienceLetterDataTable(ds.Tables["ExperienceLetter"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExitManagementResignationDataTable ExitManagementResignation {
            get {
                return this.tableExitManagementResignation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExitManagementTerminarionDataTable ExitManagementTerminarion {
            get {
                return this.tableExitManagementTerminarion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExitManagementTeamDataTable ExitManagementTeam {
            get {
                return this.tableExitManagementTeam;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RelievingLetterDataTable RelievingLetter {
            get {
                return this.tableRelievingLetter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExperienceLetterDataTable ExperienceLetter {
            get {
                return this.tableExperienceLetter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ExitManagementDataSet cln = ((ExitManagementDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ExitManagementResignation"] != null)) {
                    base.Tables.Add(new ExitManagementResignationDataTable(ds.Tables["ExitManagementResignation"]));
                }
                if ((ds.Tables["ExitManagementTerminarion"] != null)) {
                    base.Tables.Add(new ExitManagementTerminarionDataTable(ds.Tables["ExitManagementTerminarion"]));
                }
                if ((ds.Tables["ExitManagementTeam"] != null)) {
                    base.Tables.Add(new ExitManagementTeamDataTable(ds.Tables["ExitManagementTeam"]));
                }
                if ((ds.Tables["RelievingLetter"] != null)) {
                    base.Tables.Add(new RelievingLetterDataTable(ds.Tables["RelievingLetter"]));
                }
                if ((ds.Tables["ExperienceLetter"] != null)) {
                    base.Tables.Add(new ExperienceLetterDataTable(ds.Tables["ExperienceLetter"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableExitManagementResignation = ((ExitManagementResignationDataTable)(base.Tables["ExitManagementResignation"]));
            if ((initTable == true)) {
                if ((this.tableExitManagementResignation != null)) {
                    this.tableExitManagementResignation.InitVars();
                }
            }
            this.tableExitManagementTerminarion = ((ExitManagementTerminarionDataTable)(base.Tables["ExitManagementTerminarion"]));
            if ((initTable == true)) {
                if ((this.tableExitManagementTerminarion != null)) {
                    this.tableExitManagementTerminarion.InitVars();
                }
            }
            this.tableExitManagementTeam = ((ExitManagementTeamDataTable)(base.Tables["ExitManagementTeam"]));
            if ((initTable == true)) {
                if ((this.tableExitManagementTeam != null)) {
                    this.tableExitManagementTeam.InitVars();
                }
            }
            this.tableRelievingLetter = ((RelievingLetterDataTable)(base.Tables["RelievingLetter"]));
            if ((initTable == true)) {
                if ((this.tableRelievingLetter != null)) {
                    this.tableRelievingLetter.InitVars();
                }
            }
            this.tableExperienceLetter = ((ExperienceLetterDataTable)(base.Tables["ExperienceLetter"]));
            if ((initTable == true)) {
                if ((this.tableExperienceLetter != null)) {
                    this.tableExperienceLetter.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ExitManagementDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ExitManagementDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableExitManagementResignation = new ExitManagementResignationDataTable();
            base.Tables.Add(this.tableExitManagementResignation);
            this.tableExitManagementTerminarion = new ExitManagementTerminarionDataTable();
            base.Tables.Add(this.tableExitManagementTerminarion);
            this.tableExitManagementTeam = new ExitManagementTeamDataTable();
            base.Tables.Add(this.tableExitManagementTeam);
            this.tableRelievingLetter = new RelievingLetterDataTable();
            base.Tables.Add(this.tableRelievingLetter);
            this.tableExperienceLetter = new ExperienceLetterDataTable();
            base.Tables.Add(this.tableExperienceLetter);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExitManagementResignation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExitManagementTerminarion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExitManagementTeam() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRelievingLetter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExperienceLetter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ExitManagementDataSet ds = new ExitManagementDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ExitManagementResignationRowChangeEventHandler(object sender, ExitManagementResignationRowChangeEvent e);
        
        public delegate void ExitManagementTerminarionRowChangeEventHandler(object sender, ExitManagementTerminarionRowChangeEvent e);
        
        public delegate void ExitManagementTeamRowChangeEventHandler(object sender, ExitManagementTeamRowChangeEvent e);
        
        public delegate void RelievingLetterRowChangeEventHandler(object sender, RelievingLetterRowChangeEvent e);
        
        public delegate void ExperienceLetterRowChangeEventHandler(object sender, ExperienceLetterRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExitManagementResignationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEmployeementType;
            
            private global::System.Data.DataColumn columnEmpCode;
            
            private global::System.Data.DataColumn columnEmpName;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnTeamName;
            
            private global::System.Data.DataColumn columnManagerName;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnEMExitDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementResignationDataTable() {
                this.TableName = "ExitManagementResignation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExitManagementResignationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExitManagementResignationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeementTypeColumn {
                get {
                    return this.columnEmployeementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpCodeColumn {
                get {
                    return this.columnEmpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamNameColumn {
                get {
                    return this.columnTeamName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManagerNameColumn {
                get {
                    return this.columnManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMExitDateColumn {
                get {
                    return this.columnEMExitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementResignationRow this[int index] {
                get {
                    return ((ExitManagementResignationRow)(this.Rows[index]));
                }
            }
            
            public event ExitManagementResignationRowChangeEventHandler ExitManagementResignationRowChanging;
            
            public event ExitManagementResignationRowChangeEventHandler ExitManagementResignationRowChanged;
            
            public event ExitManagementResignationRowChangeEventHandler ExitManagementResignationRowDeleting;
            
            public event ExitManagementResignationRowChangeEventHandler ExitManagementResignationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExitManagementResignationRow(ExitManagementResignationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementResignationRow AddExitManagementResignationRow(string EmployeementType, string EmpCode, string EmpName, string Designation, string TeamName, string ManagerName, string JoiningDate, string EMExitDate) {
                ExitManagementResignationRow rowExitManagementResignationRow = ((ExitManagementResignationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeementType,
                        EmpCode,
                        EmpName,
                        Designation,
                        TeamName,
                        ManagerName,
                        JoiningDate,
                        EMExitDate};
                rowExitManagementResignationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExitManagementResignationRow);
                return rowExitManagementResignationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExitManagementResignationDataTable cln = ((ExitManagementResignationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExitManagementResignationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeementType = base.Columns["EmployeementType"];
                this.columnEmpCode = base.Columns["EmpCode"];
                this.columnEmpName = base.Columns["EmpName"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnTeamName = base.Columns["TeamName"];
                this.columnManagerName = base.Columns["ManagerName"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnEMExitDate = base.Columns["EMExitDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeementType = new global::System.Data.DataColumn("EmployeementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeementType);
                this.columnEmpCode = new global::System.Data.DataColumn("EmpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpCode);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnTeamName = new global::System.Data.DataColumn("TeamName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamName);
                this.columnManagerName = new global::System.Data.DataColumn("ManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagerName);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnEMExitDate = new global::System.Data.DataColumn("EMExitDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMExitDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementResignationRow NewExitManagementResignationRow() {
                return ((ExitManagementResignationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExitManagementResignationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExitManagementResignationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExitManagementResignationRowChanged != null)) {
                    this.ExitManagementResignationRowChanged(this, new ExitManagementResignationRowChangeEvent(((ExitManagementResignationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExitManagementResignationRowChanging != null)) {
                    this.ExitManagementResignationRowChanging(this, new ExitManagementResignationRowChangeEvent(((ExitManagementResignationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExitManagementResignationRowDeleted != null)) {
                    this.ExitManagementResignationRowDeleted(this, new ExitManagementResignationRowChangeEvent(((ExitManagementResignationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExitManagementResignationRowDeleting != null)) {
                    this.ExitManagementResignationRowDeleting(this, new ExitManagementResignationRowChangeEvent(((ExitManagementResignationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExitManagementResignationRow(ExitManagementResignationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExitManagementDataSet ds = new ExitManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExitManagementResignationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExitManagementTerminarionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEmployeementType;
            
            private global::System.Data.DataColumn columnEmpCode;
            
            private global::System.Data.DataColumn columnEmpName;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnTeamName;
            
            private global::System.Data.DataColumn columnManagerName;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnEMExitDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTerminarionDataTable() {
                this.TableName = "ExitManagementTerminarion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExitManagementTerminarionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExitManagementTerminarionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeementTypeColumn {
                get {
                    return this.columnEmployeementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpCodeColumn {
                get {
                    return this.columnEmpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamNameColumn {
                get {
                    return this.columnTeamName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManagerNameColumn {
                get {
                    return this.columnManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMExitDateColumn {
                get {
                    return this.columnEMExitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTerminarionRow this[int index] {
                get {
                    return ((ExitManagementTerminarionRow)(this.Rows[index]));
                }
            }
            
            public event ExitManagementTerminarionRowChangeEventHandler ExitManagementTerminarionRowChanging;
            
            public event ExitManagementTerminarionRowChangeEventHandler ExitManagementTerminarionRowChanged;
            
            public event ExitManagementTerminarionRowChangeEventHandler ExitManagementTerminarionRowDeleting;
            
            public event ExitManagementTerminarionRowChangeEventHandler ExitManagementTerminarionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExitManagementTerminarionRow(ExitManagementTerminarionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTerminarionRow AddExitManagementTerminarionRow(string EmployeementType, string EmpCode, string EmpName, string Designation, string TeamName, string ManagerName, string JoiningDate, string EMExitDate) {
                ExitManagementTerminarionRow rowExitManagementTerminarionRow = ((ExitManagementTerminarionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeementType,
                        EmpCode,
                        EmpName,
                        Designation,
                        TeamName,
                        ManagerName,
                        JoiningDate,
                        EMExitDate};
                rowExitManagementTerminarionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExitManagementTerminarionRow);
                return rowExitManagementTerminarionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExitManagementTerminarionDataTable cln = ((ExitManagementTerminarionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExitManagementTerminarionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeementType = base.Columns["EmployeementType"];
                this.columnEmpCode = base.Columns["EmpCode"];
                this.columnEmpName = base.Columns["EmpName"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnTeamName = base.Columns["TeamName"];
                this.columnManagerName = base.Columns["ManagerName"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnEMExitDate = base.Columns["EMExitDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeementType = new global::System.Data.DataColumn("EmployeementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeementType);
                this.columnEmpCode = new global::System.Data.DataColumn("EmpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpCode);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnTeamName = new global::System.Data.DataColumn("TeamName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamName);
                this.columnManagerName = new global::System.Data.DataColumn("ManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagerName);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnEMExitDate = new global::System.Data.DataColumn("EMExitDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMExitDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTerminarionRow NewExitManagementTerminarionRow() {
                return ((ExitManagementTerminarionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExitManagementTerminarionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExitManagementTerminarionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExitManagementTerminarionRowChanged != null)) {
                    this.ExitManagementTerminarionRowChanged(this, new ExitManagementTerminarionRowChangeEvent(((ExitManagementTerminarionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExitManagementTerminarionRowChanging != null)) {
                    this.ExitManagementTerminarionRowChanging(this, new ExitManagementTerminarionRowChangeEvent(((ExitManagementTerminarionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExitManagementTerminarionRowDeleted != null)) {
                    this.ExitManagementTerminarionRowDeleted(this, new ExitManagementTerminarionRowChangeEvent(((ExitManagementTerminarionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExitManagementTerminarionRowDeleting != null)) {
                    this.ExitManagementTerminarionRowDeleting(this, new ExitManagementTerminarionRowChangeEvent(((ExitManagementTerminarionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExitManagementTerminarionRow(ExitManagementTerminarionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExitManagementDataSet ds = new ExitManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExitManagementTerminarionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExitManagementTeamDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEmployeementType;
            
            private global::System.Data.DataColumn columnEmpCode;
            
            private global::System.Data.DataColumn columnEmpName;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnTeamName;
            
            private global::System.Data.DataColumn columnManagerName;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnEMExitDate;
            
            private global::System.Data.DataColumn columnTypeofexit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTeamDataTable() {
                this.TableName = "ExitManagementTeam";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExitManagementTeamDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExitManagementTeamDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeementTypeColumn {
                get {
                    return this.columnEmployeementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpCodeColumn {
                get {
                    return this.columnEmpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamNameColumn {
                get {
                    return this.columnTeamName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManagerNameColumn {
                get {
                    return this.columnManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMExitDateColumn {
                get {
                    return this.columnEMExitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeofexitColumn {
                get {
                    return this.columnTypeofexit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTeamRow this[int index] {
                get {
                    return ((ExitManagementTeamRow)(this.Rows[index]));
                }
            }
            
            public event ExitManagementTeamRowChangeEventHandler ExitManagementTeamRowChanging;
            
            public event ExitManagementTeamRowChangeEventHandler ExitManagementTeamRowChanged;
            
            public event ExitManagementTeamRowChangeEventHandler ExitManagementTeamRowDeleting;
            
            public event ExitManagementTeamRowChangeEventHandler ExitManagementTeamRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExitManagementTeamRow(ExitManagementTeamRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTeamRow AddExitManagementTeamRow(string EmployeementType, string EmpCode, string EmpName, string Designation, string TeamName, string ManagerName, string JoiningDate, string EMExitDate, string Typeofexit) {
                ExitManagementTeamRow rowExitManagementTeamRow = ((ExitManagementTeamRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeementType,
                        EmpCode,
                        EmpName,
                        Designation,
                        TeamName,
                        ManagerName,
                        JoiningDate,
                        EMExitDate,
                        Typeofexit};
                rowExitManagementTeamRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExitManagementTeamRow);
                return rowExitManagementTeamRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExitManagementTeamDataTable cln = ((ExitManagementTeamDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExitManagementTeamDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeementType = base.Columns["EmployeementType"];
                this.columnEmpCode = base.Columns["EmpCode"];
                this.columnEmpName = base.Columns["EmpName"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnTeamName = base.Columns["TeamName"];
                this.columnManagerName = base.Columns["ManagerName"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnEMExitDate = base.Columns["EMExitDate"];
                this.columnTypeofexit = base.Columns["Typeofexit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeementType = new global::System.Data.DataColumn("EmployeementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeementType);
                this.columnEmpCode = new global::System.Data.DataColumn("EmpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpCode);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnTeamName = new global::System.Data.DataColumn("TeamName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamName);
                this.columnManagerName = new global::System.Data.DataColumn("ManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagerName);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnEMExitDate = new global::System.Data.DataColumn("EMExitDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMExitDate);
                this.columnTypeofexit = new global::System.Data.DataColumn("Typeofexit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeofexit);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTeamRow NewExitManagementTeamRow() {
                return ((ExitManagementTeamRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExitManagementTeamRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExitManagementTeamRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExitManagementTeamRowChanged != null)) {
                    this.ExitManagementTeamRowChanged(this, new ExitManagementTeamRowChangeEvent(((ExitManagementTeamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExitManagementTeamRowChanging != null)) {
                    this.ExitManagementTeamRowChanging(this, new ExitManagementTeamRowChangeEvent(((ExitManagementTeamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExitManagementTeamRowDeleted != null)) {
                    this.ExitManagementTeamRowDeleted(this, new ExitManagementTeamRowChangeEvent(((ExitManagementTeamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExitManagementTeamRowDeleting != null)) {
                    this.ExitManagementTeamRowDeleting(this, new ExitManagementTeamRowChangeEvent(((ExitManagementTeamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExitManagementTeamRow(ExitManagementTeamRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExitManagementDataSet ds = new ExitManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExitManagementTeamDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RelievingLetterDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnHTMLRelievingLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelievingLetterDataTable() {
                this.TableName = "RelievingLetter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelievingLetterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RelievingLetterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HTMLRelievingLetterColumn {
                get {
                    return this.columnHTMLRelievingLetter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelievingLetterRow this[int index] {
                get {
                    return ((RelievingLetterRow)(this.Rows[index]));
                }
            }
            
            public event RelievingLetterRowChangeEventHandler RelievingLetterRowChanging;
            
            public event RelievingLetterRowChangeEventHandler RelievingLetterRowChanged;
            
            public event RelievingLetterRowChangeEventHandler RelievingLetterRowDeleting;
            
            public event RelievingLetterRowChangeEventHandler RelievingLetterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRelievingLetterRow(RelievingLetterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelievingLetterRow AddRelievingLetterRow(string HTMLRelievingLetter) {
                RelievingLetterRow rowRelievingLetterRow = ((RelievingLetterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HTMLRelievingLetter};
                rowRelievingLetterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRelievingLetterRow);
                return rowRelievingLetterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RelievingLetterDataTable cln = ((RelievingLetterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RelievingLetterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHTMLRelievingLetter = base.Columns["HTMLRelievingLetter"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHTMLRelievingLetter = new global::System.Data.DataColumn("HTMLRelievingLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHTMLRelievingLetter);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelievingLetterRow NewRelievingLetterRow() {
                return ((RelievingLetterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RelievingLetterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RelievingLetterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RelievingLetterRowChanged != null)) {
                    this.RelievingLetterRowChanged(this, new RelievingLetterRowChangeEvent(((RelievingLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RelievingLetterRowChanging != null)) {
                    this.RelievingLetterRowChanging(this, new RelievingLetterRowChangeEvent(((RelievingLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RelievingLetterRowDeleted != null)) {
                    this.RelievingLetterRowDeleted(this, new RelievingLetterRowChangeEvent(((RelievingLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RelievingLetterRowDeleting != null)) {
                    this.RelievingLetterRowDeleting(this, new RelievingLetterRowChangeEvent(((RelievingLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRelievingLetterRow(RelievingLetterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExitManagementDataSet ds = new ExitManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RelievingLetterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExperienceLetterDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnHTMLExperienceLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceLetterDataTable() {
                this.TableName = "ExperienceLetter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExperienceLetterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExperienceLetterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HTMLExperienceLetterColumn {
                get {
                    return this.columnHTMLExperienceLetter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceLetterRow this[int index] {
                get {
                    return ((ExperienceLetterRow)(this.Rows[index]));
                }
            }
            
            public event ExperienceLetterRowChangeEventHandler ExperienceLetterRowChanging;
            
            public event ExperienceLetterRowChangeEventHandler ExperienceLetterRowChanged;
            
            public event ExperienceLetterRowChangeEventHandler ExperienceLetterRowDeleting;
            
            public event ExperienceLetterRowChangeEventHandler ExperienceLetterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExperienceLetterRow(ExperienceLetterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceLetterRow AddExperienceLetterRow(string HTMLExperienceLetter) {
                ExperienceLetterRow rowExperienceLetterRow = ((ExperienceLetterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HTMLExperienceLetter};
                rowExperienceLetterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExperienceLetterRow);
                return rowExperienceLetterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExperienceLetterDataTable cln = ((ExperienceLetterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExperienceLetterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHTMLExperienceLetter = base.Columns["HTMLExperienceLetter"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHTMLExperienceLetter = new global::System.Data.DataColumn("HTMLExperienceLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHTMLExperienceLetter);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceLetterRow NewExperienceLetterRow() {
                return ((ExperienceLetterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExperienceLetterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExperienceLetterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExperienceLetterRowChanged != null)) {
                    this.ExperienceLetterRowChanged(this, new ExperienceLetterRowChangeEvent(((ExperienceLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExperienceLetterRowChanging != null)) {
                    this.ExperienceLetterRowChanging(this, new ExperienceLetterRowChangeEvent(((ExperienceLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExperienceLetterRowDeleted != null)) {
                    this.ExperienceLetterRowDeleted(this, new ExperienceLetterRowChangeEvent(((ExperienceLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExperienceLetterRowDeleting != null)) {
                    this.ExperienceLetterRowDeleting(this, new ExperienceLetterRowChangeEvent(((ExperienceLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExperienceLetterRow(ExperienceLetterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExitManagementDataSet ds = new ExitManagementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExperienceLetterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExitManagementResignationRow : global::System.Data.DataRow {
            
            private ExitManagementResignationDataTable tableExitManagementResignation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExitManagementResignationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExitManagementResignation = ((ExitManagementResignationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeementType {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementResignation.EmployeementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeementType\' in table \'ExitManagementResignation\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementResignation.EmployeementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpCode {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementResignation.EmpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpCode\' in table \'ExitManagementResignation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementResignation.EmpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpName {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementResignation.EmpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpName\' in table \'ExitManagementResignation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementResignation.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementResignation.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'ExitManagementResignation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableExitManagementResignation.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeamName {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementResignation.TeamNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamName\' in table \'ExitManagementResignation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementResignation.TeamNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManagerName {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementResignation.ManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagerName\' in table \'ExitManagementResignation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableExitManagementResignation.ManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoiningDate {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementResignation.JoiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDate\' in table \'ExitManagementResignation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableExitManagementResignation.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMExitDate {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementResignation.EMExitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMExitDate\' in table \'ExitManagementResignation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableExitManagementResignation.EMExitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeementTypeNull() {
                return this.IsNull(this.tableExitManagementResignation.EmployeementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeementTypeNull() {
                this[this.tableExitManagementResignation.EmployeementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpCodeNull() {
                return this.IsNull(this.tableExitManagementResignation.EmpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpCodeNull() {
                this[this.tableExitManagementResignation.EmpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNameNull() {
                return this.IsNull(this.tableExitManagementResignation.EmpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNameNull() {
                this[this.tableExitManagementResignation.EmpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableExitManagementResignation.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableExitManagementResignation.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeamNameNull() {
                return this.IsNull(this.tableExitManagementResignation.TeamNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeamNameNull() {
                this[this.tableExitManagementResignation.TeamNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManagerNameNull() {
                return this.IsNull(this.tableExitManagementResignation.ManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManagerNameNull() {
                this[this.tableExitManagementResignation.ManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDateNull() {
                return this.IsNull(this.tableExitManagementResignation.JoiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDateNull() {
                this[this.tableExitManagementResignation.JoiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMExitDateNull() {
                return this.IsNull(this.tableExitManagementResignation.EMExitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMExitDateNull() {
                this[this.tableExitManagementResignation.EMExitDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExitManagementTerminarionRow : global::System.Data.DataRow {
            
            private ExitManagementTerminarionDataTable tableExitManagementTerminarion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExitManagementTerminarionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExitManagementTerminarion = ((ExitManagementTerminarionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeementType {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTerminarion.EmployeementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeementType\' in table \'ExitManagementTerminarion\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTerminarion.EmployeementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpCode {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTerminarion.EmpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpCode\' in table \'ExitManagementTerminarion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTerminarion.EmpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpName {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTerminarion.EmpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpName\' in table \'ExitManagementTerminarion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTerminarion.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTerminarion.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'ExitManagementTerminarion\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableExitManagementTerminarion.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeamName {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTerminarion.TeamNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamName\' in table \'ExitManagementTerminarion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTerminarion.TeamNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManagerName {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTerminarion.ManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagerName\' in table \'ExitManagementTerminarion\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableExitManagementTerminarion.ManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoiningDate {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTerminarion.JoiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDate\' in table \'ExitManagementTerminarion\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableExitManagementTerminarion.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMExitDate {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTerminarion.EMExitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMExitDate\' in table \'ExitManagementTerminarion\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableExitManagementTerminarion.EMExitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeementTypeNull() {
                return this.IsNull(this.tableExitManagementTerminarion.EmployeementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeementTypeNull() {
                this[this.tableExitManagementTerminarion.EmployeementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpCodeNull() {
                return this.IsNull(this.tableExitManagementTerminarion.EmpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpCodeNull() {
                this[this.tableExitManagementTerminarion.EmpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNameNull() {
                return this.IsNull(this.tableExitManagementTerminarion.EmpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNameNull() {
                this[this.tableExitManagementTerminarion.EmpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableExitManagementTerminarion.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableExitManagementTerminarion.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeamNameNull() {
                return this.IsNull(this.tableExitManagementTerminarion.TeamNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeamNameNull() {
                this[this.tableExitManagementTerminarion.TeamNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManagerNameNull() {
                return this.IsNull(this.tableExitManagementTerminarion.ManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManagerNameNull() {
                this[this.tableExitManagementTerminarion.ManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDateNull() {
                return this.IsNull(this.tableExitManagementTerminarion.JoiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDateNull() {
                this[this.tableExitManagementTerminarion.JoiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMExitDateNull() {
                return this.IsNull(this.tableExitManagementTerminarion.EMExitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMExitDateNull() {
                this[this.tableExitManagementTerminarion.EMExitDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExitManagementTeamRow : global::System.Data.DataRow {
            
            private ExitManagementTeamDataTable tableExitManagementTeam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExitManagementTeamRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExitManagementTeam = ((ExitManagementTeamDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeementType {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTeam.EmployeementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeementType\' in table \'ExitManagementTeam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTeam.EmployeementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpCode {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTeam.EmpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpCode\' in table \'ExitManagementTeam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTeam.EmpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpName {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTeam.EmpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpName\' in table \'ExitManagementTeam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTeam.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTeam.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'ExitManagementTeam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTeam.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeamName {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTeam.TeamNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamName\' in table \'ExitManagementTeam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTeam.TeamNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManagerName {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTeam.ManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagerName\' in table \'ExitManagementTeam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTeam.ManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoiningDate {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTeam.JoiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDate\' in table \'ExitManagementTeam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTeam.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMExitDate {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTeam.EMExitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMExitDate\' in table \'ExitManagementTeam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTeam.EMExitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Typeofexit {
                get {
                    try {
                        return ((string)(this[this.tableExitManagementTeam.TypeofexitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Typeofexit\' in table \'ExitManagementTeam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExitManagementTeam.TypeofexitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeementTypeNull() {
                return this.IsNull(this.tableExitManagementTeam.EmployeementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeementTypeNull() {
                this[this.tableExitManagementTeam.EmployeementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpCodeNull() {
                return this.IsNull(this.tableExitManagementTeam.EmpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpCodeNull() {
                this[this.tableExitManagementTeam.EmpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNameNull() {
                return this.IsNull(this.tableExitManagementTeam.EmpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNameNull() {
                this[this.tableExitManagementTeam.EmpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableExitManagementTeam.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableExitManagementTeam.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeamNameNull() {
                return this.IsNull(this.tableExitManagementTeam.TeamNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeamNameNull() {
                this[this.tableExitManagementTeam.TeamNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManagerNameNull() {
                return this.IsNull(this.tableExitManagementTeam.ManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManagerNameNull() {
                this[this.tableExitManagementTeam.ManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDateNull() {
                return this.IsNull(this.tableExitManagementTeam.JoiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDateNull() {
                this[this.tableExitManagementTeam.JoiningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMExitDateNull() {
                return this.IsNull(this.tableExitManagementTeam.EMExitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMExitDateNull() {
                this[this.tableExitManagementTeam.EMExitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeofexitNull() {
                return this.IsNull(this.tableExitManagementTeam.TypeofexitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeofexitNull() {
                this[this.tableExitManagementTeam.TypeofexitColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RelievingLetterRow : global::System.Data.DataRow {
            
            private RelievingLetterDataTable tableRelievingLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RelievingLetterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRelievingLetter = ((RelievingLetterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HTMLRelievingLetter {
                get {
                    try {
                        return ((string)(this[this.tableRelievingLetter.HTMLRelievingLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HTMLRelievingLetter\' in table \'RelievingLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRelievingLetter.HTMLRelievingLetterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHTMLRelievingLetterNull() {
                return this.IsNull(this.tableRelievingLetter.HTMLRelievingLetterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHTMLRelievingLetterNull() {
                this[this.tableRelievingLetter.HTMLRelievingLetterColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExperienceLetterRow : global::System.Data.DataRow {
            
            private ExperienceLetterDataTable tableExperienceLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExperienceLetterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExperienceLetter = ((ExperienceLetterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HTMLExperienceLetter {
                get {
                    try {
                        return ((string)(this[this.tableExperienceLetter.HTMLExperienceLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HTMLExperienceLetter\' in table \'ExperienceLetter\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableExperienceLetter.HTMLExperienceLetterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHTMLExperienceLetterNull() {
                return this.IsNull(this.tableExperienceLetter.HTMLExperienceLetterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHTMLExperienceLetterNull() {
                this[this.tableExperienceLetter.HTMLExperienceLetterColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExitManagementResignationRowChangeEvent : global::System.EventArgs {
            
            private ExitManagementResignationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementResignationRowChangeEvent(ExitManagementResignationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementResignationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExitManagementTerminarionRowChangeEvent : global::System.EventArgs {
            
            private ExitManagementTerminarionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTerminarionRowChangeEvent(ExitManagementTerminarionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTerminarionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExitManagementTeamRowChangeEvent : global::System.EventArgs {
            
            private ExitManagementTeamRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTeamRowChangeEvent(ExitManagementTeamRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExitManagementTeamRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RelievingLetterRowChangeEvent : global::System.EventArgs {
            
            private RelievingLetterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelievingLetterRowChangeEvent(RelievingLetterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RelievingLetterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExperienceLetterRowChangeEvent : global::System.EventArgs {
            
            private ExperienceLetterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceLetterRowChangeEvent(ExperienceLetterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceLetterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591