//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ARATT.Reports.Recruitment {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RecruitmentDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RecruitmentDataSet : global::System.Data.DataSet {
        
        private ConsultantDetailsDataTable tableConsultantDetails;
        
        private InterviewDetailsDataTable tableInterviewDetails;
        
        private CandidateReferrelDetailsDataTable tableCandidateReferrelDetails;
        
        private CandidateIssueOfferLetterDataTable tableCandidateIssueOfferLetter;
        
        private ShortlistedCandidateDataTable tableShortlistedCandidate;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RecruitmentDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RecruitmentDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ConsultantDetails"] != null)) {
                    base.Tables.Add(new ConsultantDetailsDataTable(ds.Tables["ConsultantDetails"]));
                }
                if ((ds.Tables["InterviewDetails"] != null)) {
                    base.Tables.Add(new InterviewDetailsDataTable(ds.Tables["InterviewDetails"]));
                }
                if ((ds.Tables["CandidateReferrelDetails"] != null)) {
                    base.Tables.Add(new CandidateReferrelDetailsDataTable(ds.Tables["CandidateReferrelDetails"]));
                }
                if ((ds.Tables["CandidateIssueOfferLetter"] != null)) {
                    base.Tables.Add(new CandidateIssueOfferLetterDataTable(ds.Tables["CandidateIssueOfferLetter"]));
                }
                if ((ds.Tables["ShortlistedCandidate"] != null)) {
                    base.Tables.Add(new ShortlistedCandidateDataTable(ds.Tables["ShortlistedCandidate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ConsultantDetailsDataTable ConsultantDetails {
            get {
                return this.tableConsultantDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InterviewDetailsDataTable InterviewDetails {
            get {
                return this.tableInterviewDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CandidateReferrelDetailsDataTable CandidateReferrelDetails {
            get {
                return this.tableCandidateReferrelDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CandidateIssueOfferLetterDataTable CandidateIssueOfferLetter {
            get {
                return this.tableCandidateIssueOfferLetter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShortlistedCandidateDataTable ShortlistedCandidate {
            get {
                return this.tableShortlistedCandidate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RecruitmentDataSet cln = ((RecruitmentDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ConsultantDetails"] != null)) {
                    base.Tables.Add(new ConsultantDetailsDataTable(ds.Tables["ConsultantDetails"]));
                }
                if ((ds.Tables["InterviewDetails"] != null)) {
                    base.Tables.Add(new InterviewDetailsDataTable(ds.Tables["InterviewDetails"]));
                }
                if ((ds.Tables["CandidateReferrelDetails"] != null)) {
                    base.Tables.Add(new CandidateReferrelDetailsDataTable(ds.Tables["CandidateReferrelDetails"]));
                }
                if ((ds.Tables["CandidateIssueOfferLetter"] != null)) {
                    base.Tables.Add(new CandidateIssueOfferLetterDataTable(ds.Tables["CandidateIssueOfferLetter"]));
                }
                if ((ds.Tables["ShortlistedCandidate"] != null)) {
                    base.Tables.Add(new ShortlistedCandidateDataTable(ds.Tables["ShortlistedCandidate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableConsultantDetails = ((ConsultantDetailsDataTable)(base.Tables["ConsultantDetails"]));
            if ((initTable == true)) {
                if ((this.tableConsultantDetails != null)) {
                    this.tableConsultantDetails.InitVars();
                }
            }
            this.tableInterviewDetails = ((InterviewDetailsDataTable)(base.Tables["InterviewDetails"]));
            if ((initTable == true)) {
                if ((this.tableInterviewDetails != null)) {
                    this.tableInterviewDetails.InitVars();
                }
            }
            this.tableCandidateReferrelDetails = ((CandidateReferrelDetailsDataTable)(base.Tables["CandidateReferrelDetails"]));
            if ((initTable == true)) {
                if ((this.tableCandidateReferrelDetails != null)) {
                    this.tableCandidateReferrelDetails.InitVars();
                }
            }
            this.tableCandidateIssueOfferLetter = ((CandidateIssueOfferLetterDataTable)(base.Tables["CandidateIssueOfferLetter"]));
            if ((initTable == true)) {
                if ((this.tableCandidateIssueOfferLetter != null)) {
                    this.tableCandidateIssueOfferLetter.InitVars();
                }
            }
            this.tableShortlistedCandidate = ((ShortlistedCandidateDataTable)(base.Tables["ShortlistedCandidate"]));
            if ((initTable == true)) {
                if ((this.tableShortlistedCandidate != null)) {
                    this.tableShortlistedCandidate.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RecruitmentDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RecruitmentDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableConsultantDetails = new ConsultantDetailsDataTable();
            base.Tables.Add(this.tableConsultantDetails);
            this.tableInterviewDetails = new InterviewDetailsDataTable();
            base.Tables.Add(this.tableInterviewDetails);
            this.tableCandidateReferrelDetails = new CandidateReferrelDetailsDataTable();
            base.Tables.Add(this.tableCandidateReferrelDetails);
            this.tableCandidateIssueOfferLetter = new CandidateIssueOfferLetterDataTable();
            base.Tables.Add(this.tableCandidateIssueOfferLetter);
            this.tableShortlistedCandidate = new ShortlistedCandidateDataTable();
            base.Tables.Add(this.tableShortlistedCandidate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeConsultantDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInterviewDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCandidateReferrelDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCandidateIssueOfferLetter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeShortlistedCandidate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RecruitmentDataSet ds = new RecruitmentDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ConsultantDetailsRowChangeEventHandler(object sender, ConsultantDetailsRowChangeEvent e);
        
        public delegate void InterviewDetailsRowChangeEventHandler(object sender, InterviewDetailsRowChangeEvent e);
        
        public delegate void CandidateReferrelDetailsRowChangeEventHandler(object sender, CandidateReferrelDetailsRowChangeEvent e);
        
        public delegate void CandidateIssueOfferLetterRowChangeEventHandler(object sender, CandidateIssueOfferLetterRowChangeEvent e);
        
        public delegate void ShortlistedCandidateRowChangeEventHandler(object sender, ShortlistedCandidateRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ConsultantDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnConsultantName;
            
            private global::System.Data.DataColumn columnCandidateName;
            
            private global::System.Data.DataColumn columnManagerName;
            
            private global::System.Data.DataColumn columnTeamName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnReferredDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsultantDetailsDataTable() {
                this.TableName = "ConsultantDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ConsultantDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ConsultantDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsultantNameColumn {
                get {
                    return this.columnConsultantName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CandidateNameColumn {
                get {
                    return this.columnCandidateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManagerNameColumn {
                get {
                    return this.columnManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamNameColumn {
                get {
                    return this.columnTeamName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferredDateColumn {
                get {
                    return this.columnReferredDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsultantDetailsRow this[int index] {
                get {
                    return ((ConsultantDetailsRow)(this.Rows[index]));
                }
            }
            
            public event ConsultantDetailsRowChangeEventHandler ConsultantDetailsRowChanging;
            
            public event ConsultantDetailsRowChangeEventHandler ConsultantDetailsRowChanged;
            
            public event ConsultantDetailsRowChangeEventHandler ConsultantDetailsRowDeleting;
            
            public event ConsultantDetailsRowChangeEventHandler ConsultantDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddConsultantDetailsRow(ConsultantDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsultantDetailsRow AddConsultantDetailsRow(string ConsultantName, string CandidateName, string ManagerName, string TeamName, string Type, string ReferredDate) {
                ConsultantDetailsRow rowConsultantDetailsRow = ((ConsultantDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ConsultantName,
                        CandidateName,
                        ManagerName,
                        TeamName,
                        Type,
                        ReferredDate};
                rowConsultantDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConsultantDetailsRow);
                return rowConsultantDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ConsultantDetailsDataTable cln = ((ConsultantDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ConsultantDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnConsultantName = base.Columns["ConsultantName"];
                this.columnCandidateName = base.Columns["CandidateName"];
                this.columnManagerName = base.Columns["ManagerName"];
                this.columnTeamName = base.Columns["TeamName"];
                this.columnType = base.Columns["Type"];
                this.columnReferredDate = base.Columns["ReferredDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnConsultantName = new global::System.Data.DataColumn("ConsultantName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantName);
                this.columnCandidateName = new global::System.Data.DataColumn("CandidateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCandidateName);
                this.columnManagerName = new global::System.Data.DataColumn("ManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagerName);
                this.columnTeamName = new global::System.Data.DataColumn("TeamName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnReferredDate = new global::System.Data.DataColumn("ReferredDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferredDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsultantDetailsRow NewConsultantDetailsRow() {
                return ((ConsultantDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ConsultantDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ConsultantDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ConsultantDetailsRowChanged != null)) {
                    this.ConsultantDetailsRowChanged(this, new ConsultantDetailsRowChangeEvent(((ConsultantDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ConsultantDetailsRowChanging != null)) {
                    this.ConsultantDetailsRowChanging(this, new ConsultantDetailsRowChangeEvent(((ConsultantDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ConsultantDetailsRowDeleted != null)) {
                    this.ConsultantDetailsRowDeleted(this, new ConsultantDetailsRowChangeEvent(((ConsultantDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ConsultantDetailsRowDeleting != null)) {
                    this.ConsultantDetailsRowDeleting(this, new ConsultantDetailsRowChangeEvent(((ConsultantDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveConsultantDetailsRow(ConsultantDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecruitmentDataSet ds = new RecruitmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ConsultantDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InterviewDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnCandidateName;
            
            private global::System.Data.DataColumn columnExactInterviewDate;
            
            private global::System.Data.DataColumn columnScheduledDate1;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnInterviewType;
            
            private global::System.Data.DataColumn columnScheduledDate2;
            
            private global::System.Data.DataColumn columnScheduledTime1;
            
            private global::System.Data.DataColumn columnScheduledTime2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InterviewDetailsDataTable() {
                this.TableName = "InterviewDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InterviewDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InterviewDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CandidateNameColumn {
                get {
                    return this.columnCandidateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExactInterviewDateColumn {
                get {
                    return this.columnExactInterviewDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduledDate1Column {
                get {
                    return this.columnScheduledDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterviewTypeColumn {
                get {
                    return this.columnInterviewType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduledDate2Column {
                get {
                    return this.columnScheduledDate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduledTime1Column {
                get {
                    return this.columnScheduledTime1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduledTime2Column {
                get {
                    return this.columnScheduledTime2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InterviewDetailsRow this[int index] {
                get {
                    return ((InterviewDetailsRow)(this.Rows[index]));
                }
            }
            
            public event InterviewDetailsRowChangeEventHandler InterviewDetailsRowChanging;
            
            public event InterviewDetailsRowChangeEventHandler InterviewDetailsRowChanged;
            
            public event InterviewDetailsRowChangeEventHandler InterviewDetailsRowDeleting;
            
            public event InterviewDetailsRowChangeEventHandler InterviewDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInterviewDetailsRow(InterviewDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InterviewDetailsRow AddInterviewDetailsRow(string Source, string CandidateName, string ExactInterviewDate, string ScheduledDate1, string Status, string InterviewType, string ScheduledDate2, string ScheduledTime1, string ScheduledTime2) {
                InterviewDetailsRow rowInterviewDetailsRow = ((InterviewDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Source,
                        CandidateName,
                        ExactInterviewDate,
                        ScheduledDate1,
                        Status,
                        InterviewType,
                        ScheduledDate2,
                        ScheduledTime1,
                        ScheduledTime2};
                rowInterviewDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInterviewDetailsRow);
                return rowInterviewDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InterviewDetailsDataTable cln = ((InterviewDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InterviewDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSource = base.Columns["Source"];
                this.columnCandidateName = base.Columns["CandidateName"];
                this.columnExactInterviewDate = base.Columns["ExactInterviewDate"];
                this.columnScheduledDate1 = base.Columns["ScheduledDate1"];
                this.columnStatus = base.Columns["Status"];
                this.columnInterviewType = base.Columns["InterviewType"];
                this.columnScheduledDate2 = base.Columns["ScheduledDate2"];
                this.columnScheduledTime1 = base.Columns["ScheduledTime1"];
                this.columnScheduledTime2 = base.Columns["ScheduledTime2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnCandidateName = new global::System.Data.DataColumn("CandidateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCandidateName);
                this.columnExactInterviewDate = new global::System.Data.DataColumn("ExactInterviewDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExactInterviewDate);
                this.columnScheduledDate1 = new global::System.Data.DataColumn("ScheduledDate1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduledDate1);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnInterviewType = new global::System.Data.DataColumn("InterviewType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterviewType);
                this.columnScheduledDate2 = new global::System.Data.DataColumn("ScheduledDate2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduledDate2);
                this.columnScheduledTime1 = new global::System.Data.DataColumn("ScheduledTime1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduledTime1);
                this.columnScheduledTime2 = new global::System.Data.DataColumn("ScheduledTime2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduledTime2);
                this.columnSource.Caption = "ConsultantName";
                this.columnExactInterviewDate.Caption = "ManagerName";
                this.columnScheduledDate1.Caption = "TeamName";
                this.columnStatus.Caption = "Type";
                this.columnInterviewType.Caption = "ReferredDate";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InterviewDetailsRow NewInterviewDetailsRow() {
                return ((InterviewDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InterviewDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InterviewDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InterviewDetailsRowChanged != null)) {
                    this.InterviewDetailsRowChanged(this, new InterviewDetailsRowChangeEvent(((InterviewDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InterviewDetailsRowChanging != null)) {
                    this.InterviewDetailsRowChanging(this, new InterviewDetailsRowChangeEvent(((InterviewDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InterviewDetailsRowDeleted != null)) {
                    this.InterviewDetailsRowDeleted(this, new InterviewDetailsRowChangeEvent(((InterviewDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InterviewDetailsRowDeleting != null)) {
                    this.InterviewDetailsRowDeleting(this, new InterviewDetailsRowChangeEvent(((InterviewDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInterviewDetailsRow(InterviewDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecruitmentDataSet ds = new RecruitmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InterviewDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CandidateReferrelDetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnCandidateName;
            
            private global::System.Data.DataColumn columnManagerName;
            
            private global::System.Data.DataColumn columnTeamName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnReferredDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateReferrelDetailsDataTable() {
                this.TableName = "CandidateReferrelDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CandidateReferrelDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CandidateReferrelDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CandidateNameColumn {
                get {
                    return this.columnCandidateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ManagerNameColumn {
                get {
                    return this.columnManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TeamNameColumn {
                get {
                    return this.columnTeamName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferredDateColumn {
                get {
                    return this.columnReferredDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateReferrelDetailsRow this[int index] {
                get {
                    return ((CandidateReferrelDetailsRow)(this.Rows[index]));
                }
            }
            
            public event CandidateReferrelDetailsRowChangeEventHandler CandidateReferrelDetailsRowChanging;
            
            public event CandidateReferrelDetailsRowChangeEventHandler CandidateReferrelDetailsRowChanged;
            
            public event CandidateReferrelDetailsRowChangeEventHandler CandidateReferrelDetailsRowDeleting;
            
            public event CandidateReferrelDetailsRowChangeEventHandler CandidateReferrelDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCandidateReferrelDetailsRow(CandidateReferrelDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateReferrelDetailsRow AddCandidateReferrelDetailsRow(string EmployeeName, string CandidateName, string ManagerName, string TeamName, string Type, string ReferredDate) {
                CandidateReferrelDetailsRow rowCandidateReferrelDetailsRow = ((CandidateReferrelDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeeName,
                        CandidateName,
                        ManagerName,
                        TeamName,
                        Type,
                        ReferredDate};
                rowCandidateReferrelDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCandidateReferrelDetailsRow);
                return rowCandidateReferrelDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CandidateReferrelDetailsDataTable cln = ((CandidateReferrelDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CandidateReferrelDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnCandidateName = base.Columns["CandidateName"];
                this.columnManagerName = base.Columns["ManagerName"];
                this.columnTeamName = base.Columns["TeamName"];
                this.columnType = base.Columns["Type"];
                this.columnReferredDate = base.Columns["ReferredDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnCandidateName = new global::System.Data.DataColumn("CandidateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCandidateName);
                this.columnManagerName = new global::System.Data.DataColumn("ManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagerName);
                this.columnTeamName = new global::System.Data.DataColumn("TeamName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTeamName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnReferredDate = new global::System.Data.DataColumn("ReferredDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferredDate);
                this.columnEmployeeName.Caption = "ConsultantName";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateReferrelDetailsRow NewCandidateReferrelDetailsRow() {
                return ((CandidateReferrelDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CandidateReferrelDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CandidateReferrelDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CandidateReferrelDetailsRowChanged != null)) {
                    this.CandidateReferrelDetailsRowChanged(this, new CandidateReferrelDetailsRowChangeEvent(((CandidateReferrelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CandidateReferrelDetailsRowChanging != null)) {
                    this.CandidateReferrelDetailsRowChanging(this, new CandidateReferrelDetailsRowChangeEvent(((CandidateReferrelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CandidateReferrelDetailsRowDeleted != null)) {
                    this.CandidateReferrelDetailsRowDeleted(this, new CandidateReferrelDetailsRowChangeEvent(((CandidateReferrelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CandidateReferrelDetailsRowDeleting != null)) {
                    this.CandidateReferrelDetailsRowDeleting(this, new CandidateReferrelDetailsRowChangeEvent(((CandidateReferrelDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCandidateReferrelDetailsRow(CandidateReferrelDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecruitmentDataSet ds = new RecruitmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CandidateReferrelDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CandidateIssueOfferLetterDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCandidateName;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnInterviewDate;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateIssueOfferLetterDataTable() {
                this.TableName = "CandidateIssueOfferLetter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CandidateIssueOfferLetterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CandidateIssueOfferLetterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CandidateNameColumn {
                get {
                    return this.columnCandidateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterviewDateColumn {
                get {
                    return this.columnInterviewDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateIssueOfferLetterRow this[int index] {
                get {
                    return ((CandidateIssueOfferLetterRow)(this.Rows[index]));
                }
            }
            
            public event CandidateIssueOfferLetterRowChangeEventHandler CandidateIssueOfferLetterRowChanging;
            
            public event CandidateIssueOfferLetterRowChangeEventHandler CandidateIssueOfferLetterRowChanged;
            
            public event CandidateIssueOfferLetterRowChangeEventHandler CandidateIssueOfferLetterRowDeleting;
            
            public event CandidateIssueOfferLetterRowChangeEventHandler CandidateIssueOfferLetterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCandidateIssueOfferLetterRow(CandidateIssueOfferLetterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateIssueOfferLetterRow AddCandidateIssueOfferLetterRow(string CandidateName, string Source, string InterviewDate, string JoiningDate) {
                CandidateIssueOfferLetterRow rowCandidateIssueOfferLetterRow = ((CandidateIssueOfferLetterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CandidateName,
                        Source,
                        InterviewDate,
                        JoiningDate};
                rowCandidateIssueOfferLetterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCandidateIssueOfferLetterRow);
                return rowCandidateIssueOfferLetterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CandidateIssueOfferLetterDataTable cln = ((CandidateIssueOfferLetterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CandidateIssueOfferLetterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCandidateName = base.Columns["CandidateName"];
                this.columnSource = base.Columns["Source"];
                this.columnInterviewDate = base.Columns["InterviewDate"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCandidateName = new global::System.Data.DataColumn("CandidateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCandidateName);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnInterviewDate = new global::System.Data.DataColumn("InterviewDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterviewDate);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnSource.Caption = "ManagerName";
                this.columnInterviewDate.Caption = "TeamName";
                this.columnJoiningDate.Caption = "Type";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateIssueOfferLetterRow NewCandidateIssueOfferLetterRow() {
                return ((CandidateIssueOfferLetterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CandidateIssueOfferLetterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CandidateIssueOfferLetterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CandidateIssueOfferLetterRowChanged != null)) {
                    this.CandidateIssueOfferLetterRowChanged(this, new CandidateIssueOfferLetterRowChangeEvent(((CandidateIssueOfferLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CandidateIssueOfferLetterRowChanging != null)) {
                    this.CandidateIssueOfferLetterRowChanging(this, new CandidateIssueOfferLetterRowChangeEvent(((CandidateIssueOfferLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CandidateIssueOfferLetterRowDeleted != null)) {
                    this.CandidateIssueOfferLetterRowDeleted(this, new CandidateIssueOfferLetterRowChangeEvent(((CandidateIssueOfferLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CandidateIssueOfferLetterRowDeleting != null)) {
                    this.CandidateIssueOfferLetterRowDeleting(this, new CandidateIssueOfferLetterRowChangeEvent(((CandidateIssueOfferLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCandidateIssueOfferLetterRow(CandidateIssueOfferLetterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecruitmentDataSet ds = new RecruitmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CandidateIssueOfferLetterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShortlistedCandidateDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnCandidateName;
            
            private global::System.Data.DataColumn columnAppliedDate;
            
            private global::System.Data.DataColumn columnScheduledDate1;
            
            private global::System.Data.DataColumn columnInterviewType;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnScheduledDate2;
            
            private global::System.Data.DataColumn columnScheduledTime1;
            
            private global::System.Data.DataColumn columnScheduledTime2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortlistedCandidateDataTable() {
                this.TableName = "ShortlistedCandidate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ShortlistedCandidateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ShortlistedCandidateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CandidateNameColumn {
                get {
                    return this.columnCandidateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppliedDateColumn {
                get {
                    return this.columnAppliedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduledDate1Column {
                get {
                    return this.columnScheduledDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterviewTypeColumn {
                get {
                    return this.columnInterviewType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduledDate2Column {
                get {
                    return this.columnScheduledDate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduledTime1Column {
                get {
                    return this.columnScheduledTime1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduledTime2Column {
                get {
                    return this.columnScheduledTime2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortlistedCandidateRow this[int index] {
                get {
                    return ((ShortlistedCandidateRow)(this.Rows[index]));
                }
            }
            
            public event ShortlistedCandidateRowChangeEventHandler ShortlistedCandidateRowChanging;
            
            public event ShortlistedCandidateRowChangeEventHandler ShortlistedCandidateRowChanged;
            
            public event ShortlistedCandidateRowChangeEventHandler ShortlistedCandidateRowDeleting;
            
            public event ShortlistedCandidateRowChangeEventHandler ShortlistedCandidateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddShortlistedCandidateRow(ShortlistedCandidateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortlistedCandidateRow AddShortlistedCandidateRow(string Source, string CandidateName, string AppliedDate, string ScheduledDate1, string InterviewType, string Status, string ScheduledDate2, string ScheduledTime1, string ScheduledTime2) {
                ShortlistedCandidateRow rowShortlistedCandidateRow = ((ShortlistedCandidateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Source,
                        CandidateName,
                        AppliedDate,
                        ScheduledDate1,
                        InterviewType,
                        Status,
                        ScheduledDate2,
                        ScheduledTime1,
                        ScheduledTime2};
                rowShortlistedCandidateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShortlistedCandidateRow);
                return rowShortlistedCandidateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ShortlistedCandidateDataTable cln = ((ShortlistedCandidateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShortlistedCandidateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSource = base.Columns["Source"];
                this.columnCandidateName = base.Columns["CandidateName"];
                this.columnAppliedDate = base.Columns["AppliedDate"];
                this.columnScheduledDate1 = base.Columns["ScheduledDate1"];
                this.columnInterviewType = base.Columns["InterviewType"];
                this.columnStatus = base.Columns["Status"];
                this.columnScheduledDate2 = base.Columns["ScheduledDate2"];
                this.columnScheduledTime1 = base.Columns["ScheduledTime1"];
                this.columnScheduledTime2 = base.Columns["ScheduledTime2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnCandidateName = new global::System.Data.DataColumn("CandidateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCandidateName);
                this.columnAppliedDate = new global::System.Data.DataColumn("AppliedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppliedDate);
                this.columnScheduledDate1 = new global::System.Data.DataColumn("ScheduledDate1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduledDate1);
                this.columnInterviewType = new global::System.Data.DataColumn("InterviewType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterviewType);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnScheduledDate2 = new global::System.Data.DataColumn("ScheduledDate2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduledDate2);
                this.columnScheduledTime1 = new global::System.Data.DataColumn("ScheduledTime1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduledTime1);
                this.columnScheduledTime2 = new global::System.Data.DataColumn("ScheduledTime2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduledTime2);
                this.columnSource.Caption = "ConsultantName";
                this.columnAppliedDate.Caption = "ManagerName";
                this.columnScheduledDate1.Caption = "TeamName";
                this.columnInterviewType.Caption = "Type";
                this.columnStatus.Caption = "ReferredDate";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortlistedCandidateRow NewShortlistedCandidateRow() {
                return ((ShortlistedCandidateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShortlistedCandidateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ShortlistedCandidateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShortlistedCandidateRowChanged != null)) {
                    this.ShortlistedCandidateRowChanged(this, new ShortlistedCandidateRowChangeEvent(((ShortlistedCandidateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShortlistedCandidateRowChanging != null)) {
                    this.ShortlistedCandidateRowChanging(this, new ShortlistedCandidateRowChangeEvent(((ShortlistedCandidateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShortlistedCandidateRowDeleted != null)) {
                    this.ShortlistedCandidateRowDeleted(this, new ShortlistedCandidateRowChangeEvent(((ShortlistedCandidateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShortlistedCandidateRowDeleting != null)) {
                    this.ShortlistedCandidateRowDeleting(this, new ShortlistedCandidateRowChangeEvent(((ShortlistedCandidateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveShortlistedCandidateRow(ShortlistedCandidateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecruitmentDataSet ds = new RecruitmentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShortlistedCandidateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ConsultantDetailsRow : global::System.Data.DataRow {
            
            private ConsultantDetailsDataTable tableConsultantDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ConsultantDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConsultantDetails = ((ConsultantDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConsultantName {
                get {
                    try {
                        return ((string)(this[this.tableConsultantDetails.ConsultantNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantName\' in table \'ConsultantDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConsultantDetails.ConsultantNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CandidateName {
                get {
                    try {
                        return ((string)(this[this.tableConsultantDetails.CandidateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CandidateName\' in table \'ConsultantDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConsultantDetails.CandidateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManagerName {
                get {
                    try {
                        return ((string)(this[this.tableConsultantDetails.ManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagerName\' in table \'ConsultantDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConsultantDetails.ManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeamName {
                get {
                    try {
                        return ((string)(this[this.tableConsultantDetails.TeamNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamName\' in table \'ConsultantDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConsultantDetails.TeamNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableConsultantDetails.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'ConsultantDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConsultantDetails.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferredDate {
                get {
                    try {
                        return ((string)(this[this.tableConsultantDetails.ReferredDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferredDate\' in table \'ConsultantDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConsultantDetails.ReferredDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsultantNameNull() {
                return this.IsNull(this.tableConsultantDetails.ConsultantNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsultantNameNull() {
                this[this.tableConsultantDetails.ConsultantNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCandidateNameNull() {
                return this.IsNull(this.tableConsultantDetails.CandidateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCandidateNameNull() {
                this[this.tableConsultantDetails.CandidateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManagerNameNull() {
                return this.IsNull(this.tableConsultantDetails.ManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManagerNameNull() {
                this[this.tableConsultantDetails.ManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeamNameNull() {
                return this.IsNull(this.tableConsultantDetails.TeamNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeamNameNull() {
                this[this.tableConsultantDetails.TeamNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableConsultantDetails.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableConsultantDetails.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferredDateNull() {
                return this.IsNull(this.tableConsultantDetails.ReferredDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferredDateNull() {
                this[this.tableConsultantDetails.ReferredDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InterviewDetailsRow : global::System.Data.DataRow {
            
            private InterviewDetailsDataTable tableInterviewDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InterviewDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInterviewDetails = ((InterviewDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Source {
                get {
                    try {
                        return ((string)(this[this.tableInterviewDetails.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'InterviewDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterviewDetails.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CandidateName {
                get {
                    try {
                        return ((string)(this[this.tableInterviewDetails.CandidateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CandidateName\' in table \'InterviewDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterviewDetails.CandidateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExactInterviewDate {
                get {
                    try {
                        return ((string)(this[this.tableInterviewDetails.ExactInterviewDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExactInterviewDate\' in table \'InterviewDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterviewDetails.ExactInterviewDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduledDate1 {
                get {
                    try {
                        return ((string)(this[this.tableInterviewDetails.ScheduledDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduledDate1\' in table \'InterviewDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterviewDetails.ScheduledDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableInterviewDetails.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'InterviewDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterviewDetails.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterviewType {
                get {
                    try {
                        return ((string)(this[this.tableInterviewDetails.InterviewTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterviewType\' in table \'InterviewDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterviewDetails.InterviewTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduledDate2 {
                get {
                    try {
                        return ((string)(this[this.tableInterviewDetails.ScheduledDate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduledDate2\' in table \'InterviewDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterviewDetails.ScheduledDate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduledTime1 {
                get {
                    try {
                        return ((string)(this[this.tableInterviewDetails.ScheduledTime1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduledTime1\' in table \'InterviewDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterviewDetails.ScheduledTime1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduledTime2 {
                get {
                    try {
                        return ((string)(this[this.tableInterviewDetails.ScheduledTime2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduledTime2\' in table \'InterviewDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInterviewDetails.ScheduledTime2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceNull() {
                return this.IsNull(this.tableInterviewDetails.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceNull() {
                this[this.tableInterviewDetails.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCandidateNameNull() {
                return this.IsNull(this.tableInterviewDetails.CandidateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCandidateNameNull() {
                this[this.tableInterviewDetails.CandidateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExactInterviewDateNull() {
                return this.IsNull(this.tableInterviewDetails.ExactInterviewDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExactInterviewDateNull() {
                this[this.tableInterviewDetails.ExactInterviewDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduledDate1Null() {
                return this.IsNull(this.tableInterviewDetails.ScheduledDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduledDate1Null() {
                this[this.tableInterviewDetails.ScheduledDate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableInterviewDetails.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableInterviewDetails.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterviewTypeNull() {
                return this.IsNull(this.tableInterviewDetails.InterviewTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterviewTypeNull() {
                this[this.tableInterviewDetails.InterviewTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduledDate2Null() {
                return this.IsNull(this.tableInterviewDetails.ScheduledDate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduledDate2Null() {
                this[this.tableInterviewDetails.ScheduledDate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduledTime1Null() {
                return this.IsNull(this.tableInterviewDetails.ScheduledTime1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduledTime1Null() {
                this[this.tableInterviewDetails.ScheduledTime1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduledTime2Null() {
                return this.IsNull(this.tableInterviewDetails.ScheduledTime2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduledTime2Null() {
                this[this.tableInterviewDetails.ScheduledTime2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CandidateReferrelDetailsRow : global::System.Data.DataRow {
            
            private CandidateReferrelDetailsDataTable tableCandidateReferrelDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CandidateReferrelDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCandidateReferrelDetails = ((CandidateReferrelDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableCandidateReferrelDetails.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeName\' in table \'CandidateReferrelDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCandidateReferrelDetails.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CandidateName {
                get {
                    try {
                        return ((string)(this[this.tableCandidateReferrelDetails.CandidateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CandidateName\' in table \'CandidateReferrelDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCandidateReferrelDetails.CandidateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManagerName {
                get {
                    try {
                        return ((string)(this[this.tableCandidateReferrelDetails.ManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagerName\' in table \'CandidateReferrelDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCandidateReferrelDetails.ManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TeamName {
                get {
                    try {
                        return ((string)(this[this.tableCandidateReferrelDetails.TeamNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TeamName\' in table \'CandidateReferrelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCandidateReferrelDetails.TeamNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableCandidateReferrelDetails.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'CandidateReferrelDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCandidateReferrelDetails.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferredDate {
                get {
                    try {
                        return ((string)(this[this.tableCandidateReferrelDetails.ReferredDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferredDate\' in table \'CandidateReferrelDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCandidateReferrelDetails.ReferredDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableCandidateReferrelDetails.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeNameNull() {
                this[this.tableCandidateReferrelDetails.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCandidateNameNull() {
                return this.IsNull(this.tableCandidateReferrelDetails.CandidateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCandidateNameNull() {
                this[this.tableCandidateReferrelDetails.CandidateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManagerNameNull() {
                return this.IsNull(this.tableCandidateReferrelDetails.ManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManagerNameNull() {
                this[this.tableCandidateReferrelDetails.ManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTeamNameNull() {
                return this.IsNull(this.tableCandidateReferrelDetails.TeamNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTeamNameNull() {
                this[this.tableCandidateReferrelDetails.TeamNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableCandidateReferrelDetails.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableCandidateReferrelDetails.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferredDateNull() {
                return this.IsNull(this.tableCandidateReferrelDetails.ReferredDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferredDateNull() {
                this[this.tableCandidateReferrelDetails.ReferredDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CandidateIssueOfferLetterRow : global::System.Data.DataRow {
            
            private CandidateIssueOfferLetterDataTable tableCandidateIssueOfferLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CandidateIssueOfferLetterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCandidateIssueOfferLetter = ((CandidateIssueOfferLetterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CandidateName {
                get {
                    try {
                        return ((string)(this[this.tableCandidateIssueOfferLetter.CandidateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CandidateName\' in table \'CandidateIssueOfferLetter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCandidateIssueOfferLetter.CandidateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Source {
                get {
                    try {
                        return ((string)(this[this.tableCandidateIssueOfferLetter.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'CandidateIssueOfferLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCandidateIssueOfferLetter.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterviewDate {
                get {
                    try {
                        return ((string)(this[this.tableCandidateIssueOfferLetter.InterviewDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterviewDate\' in table \'CandidateIssueOfferLetter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCandidateIssueOfferLetter.InterviewDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoiningDate {
                get {
                    try {
                        return ((string)(this[this.tableCandidateIssueOfferLetter.JoiningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDate\' in table \'CandidateIssueOfferLetter\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCandidateIssueOfferLetter.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCandidateNameNull() {
                return this.IsNull(this.tableCandidateIssueOfferLetter.CandidateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCandidateNameNull() {
                this[this.tableCandidateIssueOfferLetter.CandidateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceNull() {
                return this.IsNull(this.tableCandidateIssueOfferLetter.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceNull() {
                this[this.tableCandidateIssueOfferLetter.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterviewDateNull() {
                return this.IsNull(this.tableCandidateIssueOfferLetter.InterviewDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterviewDateNull() {
                this[this.tableCandidateIssueOfferLetter.InterviewDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDateNull() {
                return this.IsNull(this.tableCandidateIssueOfferLetter.JoiningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDateNull() {
                this[this.tableCandidateIssueOfferLetter.JoiningDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ShortlistedCandidateRow : global::System.Data.DataRow {
            
            private ShortlistedCandidateDataTable tableShortlistedCandidate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ShortlistedCandidateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShortlistedCandidate = ((ShortlistedCandidateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Source {
                get {
                    try {
                        return ((string)(this[this.tableShortlistedCandidate.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'ShortlistedCandidate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortlistedCandidate.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CandidateName {
                get {
                    try {
                        return ((string)(this[this.tableShortlistedCandidate.CandidateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CandidateName\' in table \'ShortlistedCandidate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortlistedCandidate.CandidateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AppliedDate {
                get {
                    try {
                        return ((string)(this[this.tableShortlistedCandidate.AppliedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppliedDate\' in table \'ShortlistedCandidate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortlistedCandidate.AppliedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduledDate1 {
                get {
                    try {
                        return ((string)(this[this.tableShortlistedCandidate.ScheduledDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduledDate1\' in table \'ShortlistedCandidate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortlistedCandidate.ScheduledDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterviewType {
                get {
                    try {
                        return ((string)(this[this.tableShortlistedCandidate.InterviewTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterviewType\' in table \'ShortlistedCandidate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortlistedCandidate.InterviewTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableShortlistedCandidate.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ShortlistedCandidate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortlistedCandidate.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduledDate2 {
                get {
                    try {
                        return ((string)(this[this.tableShortlistedCandidate.ScheduledDate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduledDate2\' in table \'ShortlistedCandidate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortlistedCandidate.ScheduledDate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduledTime1 {
                get {
                    try {
                        return ((string)(this[this.tableShortlistedCandidate.ScheduledTime1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduledTime1\' in table \'ShortlistedCandidate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortlistedCandidate.ScheduledTime1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduledTime2 {
                get {
                    try {
                        return ((string)(this[this.tableShortlistedCandidate.ScheduledTime2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduledTime2\' in table \'ShortlistedCandidate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortlistedCandidate.ScheduledTime2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceNull() {
                return this.IsNull(this.tableShortlistedCandidate.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceNull() {
                this[this.tableShortlistedCandidate.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCandidateNameNull() {
                return this.IsNull(this.tableShortlistedCandidate.CandidateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCandidateNameNull() {
                this[this.tableShortlistedCandidate.CandidateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppliedDateNull() {
                return this.IsNull(this.tableShortlistedCandidate.AppliedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppliedDateNull() {
                this[this.tableShortlistedCandidate.AppliedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduledDate1Null() {
                return this.IsNull(this.tableShortlistedCandidate.ScheduledDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduledDate1Null() {
                this[this.tableShortlistedCandidate.ScheduledDate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterviewTypeNull() {
                return this.IsNull(this.tableShortlistedCandidate.InterviewTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterviewTypeNull() {
                this[this.tableShortlistedCandidate.InterviewTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableShortlistedCandidate.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableShortlistedCandidate.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduledDate2Null() {
                return this.IsNull(this.tableShortlistedCandidate.ScheduledDate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduledDate2Null() {
                this[this.tableShortlistedCandidate.ScheduledDate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduledTime1Null() {
                return this.IsNull(this.tableShortlistedCandidate.ScheduledTime1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduledTime1Null() {
                this[this.tableShortlistedCandidate.ScheduledTime1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduledTime2Null() {
                return this.IsNull(this.tableShortlistedCandidate.ScheduledTime2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduledTime2Null() {
                this[this.tableShortlistedCandidate.ScheduledTime2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ConsultantDetailsRowChangeEvent : global::System.EventArgs {
            
            private ConsultantDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsultantDetailsRowChangeEvent(ConsultantDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConsultantDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InterviewDetailsRowChangeEvent : global::System.EventArgs {
            
            private InterviewDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InterviewDetailsRowChangeEvent(InterviewDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InterviewDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CandidateReferrelDetailsRowChangeEvent : global::System.EventArgs {
            
            private CandidateReferrelDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateReferrelDetailsRowChangeEvent(CandidateReferrelDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateReferrelDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CandidateIssueOfferLetterRowChangeEvent : global::System.EventArgs {
            
            private CandidateIssueOfferLetterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateIssueOfferLetterRowChangeEvent(CandidateIssueOfferLetterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CandidateIssueOfferLetterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ShortlistedCandidateRowChangeEvent : global::System.EventArgs {
            
            private ShortlistedCandidateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortlistedCandidateRowChangeEvent(ShortlistedCandidateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortlistedCandidateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591