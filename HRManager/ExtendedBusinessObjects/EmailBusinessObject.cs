using System;
using System.Data;
using System.Collections;
using IS91.Services.DataBlock;
using HRManager.DTO;

namespace HRManager.BusinessObjects
{
    public partial class EmailBusinessObject
    {
        public Email[] GetAllUnsentEmails()
        {
            const String Qry = " SELECT * FROM Email WHERE SendStatus = '{0}'"
                                + " OR (SendStatus = '{1}' AND RetryCount < {2})";

            ExecutionEngine EE = ExecutionEngine.CreateNewExecutionEngine(Configuration.DatabaseServerType, Configuration.ConnectionString);
            ExecutionQuery exQry = new ExecutionQuery();
            exQry.Query = string.Format(Qry, HRAppCommands.EMAIL_STATUS_NEW, HRAppCommands.EMAIL_STATUS_RETRY,  HRAppCommands.MAX_RETRY_ATTEMPT + 1 );
            DataTable dt = EE.ExecuteDataTable(exQry);
            Email[] Emails = new Email[dt.Rows.Count];

            for (int i = 0; i < Emails.Length; i++)
            {
                Emails[i] = new Email();
                Emails[i].ID = (int)dt.Rows[i]["ID"];
                Emails[i].ToAddress = (String)dt.Rows[i]["ToAddress"];
                Emails[i].FromAddress = (String)dt.Rows[i]["FromAddress"];
                Emails[i].CcList = (String)dt.Rows[i]["CcList"];
                Emails[i].BccList = (String)dt.Rows[i]["BccList"];
                Emails[i].EmailSubject = (String)dt.Rows[i]["EmailSubject"];
                Emails[i].EmailBody = (String)dt.Rows[i]["EmailBody"];
                Emails[i].Attachment = (String)dt.Rows[i]["Attachment"];
                Emails[i].SendStatus = (String)dt.Rows[i]["SendStatus"];
                Emails[i].RetryCount = (int)dt.Rows[i]["RetryCount"];
                Emails[i].FirstSendAttempt = (DateTime)dt.Rows[i]["FirstSendAttempt"];
                Emails[i].LastSendAttempt = (DateTime)dt.Rows[i]["LastSendAttempt"];
                Emails[i].ErrorMsgOnSendFail = (String)dt.Rows[i]["ErrorMsgOnSendFail"];
            } 
            ////public DatabaseField(DbType fieldType, string fieldName, bool isPrimaryKey, bool isValueAutogenerated, object fieldValue);
            //DatabaseField[] dbfUnsent = new DatabaseField[2];
            //object temp=new object();
            //dbfUnsent[0] = new DatabaseField(DbType.String, "SendStatus", false, false, temp);
            //QueryCriteria qcUnsent = new QueryCriteria("Email", dbfUnsent);
            //Object[] obj= new Object[1];
            //obj[0]=HRAppCommands.EMAIL_STATUS_NEW;
            //qcUnsent.Add(CriteriaOperator.Equality, dbfUnsent[0], obj);
              
            //Email[] emails = GetEmail(qcUnsent);
            return Emails;
        }

        public static String GetMaildIDsforGradeandDept(String GradeIDList, String DeptIDList)
        {
            String EmailIDs = "";

                String Qry = "Select EMailID from master_employees ME inner join Assign_Emp_Grade AEG "
                + " on ME.ID = AEG.EmpID where "
                + " gradeid in ({0}) and departmentid in ({1})  and "
                + " AEG.ActivatedDate = (Select Max(ActivatedDate) from Assign_Emp_Grade "
                + " where EmpID=AEG.EmpID) ";

                ExecutionEngine EE = ExecutionEngine.CreateNewExecutionEngine(Configuration.DatabaseServerType, Configuration.ConnectionString);
                ExecutionQuery exQry = new ExecutionQuery();
                exQry.Query = string.Format(Qry, GradeIDList, DeptIDList);
                DataTable dt = EE.ExecuteDataTable(exQry);

                if (dt.Rows.Count > 0)
                {
                    for (int d = 0; d < dt.Rows.Count; d++)
                    {
                        if(d==0)
                            EmailIDs = EmailIDs + (String)dt.Rows[d]["EMailID"];
                        else
                            EmailIDs = EmailIDs + ","+(String)dt.Rows[d]["EMailID"];
                    }
                }

            return EmailIDs;
        }

        //public Email GetEmailByID(int ID)
        //{
        //    Email objEmailDT = new Email();
        //    const String Qry = " SELECT * FROM Email WHERE ID = {0}";

        //    ExecutionEngine EE = ExecutionEngine.CreateNewExecutionEngine(Configuration.DatabaseServerType, Configuration.ConnectionString);
        //    ExecutionQuery exQry = new ExecutionQuery();
        //    exQry.Query = string.Format(Qry,ID);
        //    DataTable dt = EE.ExecuteDataTable(exQry);

        //    Email[] Emails = new Email[dt.Rows.Count];

        //    for (int i = 0; i < Emails.Length; i++)
        //    {
        //        Emails[i] = new Email();
        //        Emails[i].ID = (int)dt.Rows[i]["ID"];
        //        Emails[i].ToAddress = (String)dt.Rows[i]["ToAddress"];
        //        Emails[i].FromAddress = (String)dt.Rows[i]["FromAddress"];
        //        Emails[i].CcList = (String)dt.Rows[i]["CcList"];
        //        Emails[i].BccList = (String)dt.Rows[i]["BccList"];
        //        Emails[i].EmailSubject = (String)dt.Rows[i]["EmailSubject"];
        //        Emails[i].EmailBody = (String)dt.Rows[i]["EmailBody"];
        //        Emails[i].Attachment = (String)dt.Rows[i]["Attachment"];
        //        Emails[i].SendStatus = (String)dt.Rows[i]["SendStatus"];
        //        Emails[i].RetryCount = (int)dt.Rows[i]["RetryCount"];
        //        Emails[i].FirstSendAttempt = (DateTime)dt.Rows[i]["FirstSendAttempt"];
        //        Emails[i].LastSendAttempt = (DateTime)dt.Rows[i]["LastSendAttempt"];
        //        Emails[i].ErrorMsgOnSendFail = (String)dt.Rows[i]["ErrorMsgOnSendFail"];
        //    }
        //    return Emails;
        //}
    }
}